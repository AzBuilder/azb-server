{
	"info": {
		"_postman_id": "ebc79ec0-e357-49ad-be65-0f815172585d",
		"name": "AzBuilder",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "organization",
			"item": [
				{
					"name": "create organization",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var json = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"organizationId\", json.data.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{device_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"data\": {\r\n    \"type\": \"organization\",\r\n    \"attributes\": {\r\n      \"name\": \"hashicorp2\",\r\n      \"description\": \"Sample Organization\"\r\n    }\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/api/v1/organization",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"v1",
								"organization"
							]
						}
					},
					"response": []
				},
				{
					"name": "search organizations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/html; charset=utf8",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server}}/api/v1/organization",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"v1",
								"organization"
							]
						}
					},
					"response": []
				},
				{
					"name": "search org by name,module[name,provider]",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{server}}/api/v1/organization?filter[organization]=name==sampleOrg&filter[module]=provider==sampleProvider;name==azure",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"v1",
								"organization"
							],
							"query": [
								{
									"key": "filter[organization]",
									"value": "name==sampleOrg"
								},
								{
									"key": "filter[module]",
									"value": "provider==sampleProvider;name==azure"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search org by name provider[name]",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{server}}/api/v1/organization?filter[organization]=name==hashicorp&filter[provider]=name==random",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"v1",
								"organization"
							],
							"query": [
								{
									"key": "filter[organization]",
									"value": "name==hashicorp"
								},
								{
									"key": "filter[provider]",
									"value": "name==random"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search org by name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{server}}/api/v1/organization?filter[organization]=name==hashicorp",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"v1",
								"organization"
							],
							"query": [
								{
									"key": "filter[organization]",
									"value": "name==hashicorp"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search organizations with pending jobs Copy",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{server}}/api/v1/organization?filter=job.status==pending&include=job",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"v1",
								"organization"
							],
							"query": [
								{
									"key": "filter",
									"value": "job.status==pending"
								},
								{
									"key": "include",
									"value": "job"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search organization by id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{server}}/api/v1/organization/{{organizationId}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"v1",
								"organization",
								"{{organizationId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "search organization relation",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{server}}/api/v1/organization/{{organizationId}}/relationships/module?include=module",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"v1",
								"organization",
								"{{organizationId}}",
								"relationships",
								"module"
							],
							"query": [
								{
									"key": "include",
									"value": "module"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete organization by id",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{server}}/api/v1/organization/{{organizationId}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"v1",
								"organization",
								"{{organizationId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "teams",
			"item": [
				{
					"name": "create team A",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var json = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"teamIdA\", json.data.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"type\": \"team\",\n    \"attributes\": {\n      \"name\": \"AZB_USER\",\n      \"manageWorkspace\": true,\n      \"manageModule\": false,\n      \"manageProvider\": false\n    }\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/api/v1/organization/{{organizationId}}/team",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"v1",
								"organization",
								"{{organizationId}}",
								"team"
							]
						}
					},
					"response": []
				},
				{
					"name": "create team B",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var json = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"teamIdB\", json.data.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"type\": \"team\",\n    \"attributes\": {\n      \"name\": \"AZB_TEST\",\n      \"manageWorkspace\": true,\n      \"manageModule\": false,\n      \"manageProvider\": false\n    }\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/api/v1/organization/{{organizationId}}/team",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"v1",
								"organization",
								"{{organizationId}}",
								"team"
							]
						}
					},
					"response": []
				},
				{
					"name": "search team",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var json = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"teamIdB\", json.data.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"type\": \"team\",\n    \"attributes\": {\n      \"name\": \"AZB_USER\",\n      \"createWorkspace\": true,\n      \"deleteWorkspace\": false\n    }\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/api/v1/organization/{{organizationId}}/team",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"v1",
								"organization",
								"{{organizationId}}",
								"team"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "provider",
			"item": [
				{
					"name": "version",
					"item": [
						{
							"name": "Implementation",
							"item": [
								{
									"name": "create file macos",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var json = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"fileIdMacos\", json.data.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": {\n    \"type\": \"implementation\",\n    \"attributes\": {\n        \"os\": \"darwin\",\n        \"arch\": \"amd64\",\n        \"filename\": \"terraform-provider-random_2.0.0_darwin_amd64.zip\",\n        \"downloadUrl\": \"https://releases.hashicorp.com/terraform-provider-random/2.0.0/terraform-provider-random_2.0.0_darwin_amd64.zip\",\n        \"shasumsUrl\": \"https://releases.hashicorp.com/terraform-provider-random/2.0.0/terraform-provider-random_2.0.0_SHA256SUMS\",\n        \"shasumsSignatureUrl\": \"https://releases.hashicorp.com/terraform-provider-random/2.0.0/terraform-provider-random_2.0.0_SHA256SUMS.72D7468F.sig\",\n        \"shasum\": \"55ced41e5f68730ef36272d4953f336a50f318c1d1d174665f5fa76cb5df08ae\",\n        \"keyId\": \"34365D9472D7468F\",\n        \"asciiArmor\": \"-----BEGIN PGP PUBLIC KEY BLOCK-----\\n\\n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\\nZF5q4h4I33PSGDdSvGXn9UMY5Isjpg==\\n=7pIB\\n-----END PGP PUBLIC KEY BLOCK-----\",\n            \"trustSignature\": \"\",\n            \"source\": \"HashiCorp\",\n            \"sourceUrl\": \"https://www.hashicorp.com/security.html\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{server}}/api/v1/organization/{{organizationId}}/provider/{{providerId}}/version/{{versionId}}/implementation",
											"host": [
												"{{server}}"
											],
											"path": [
												"api",
												"v1",
												"organization",
												"{{organizationId}}",
												"provider",
												"{{providerId}}",
												"version",
												"{{versionId}}",
												"implementation"
											]
										}
									},
									"response": []
								},
								{
									"name": "create file windows",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var json = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"fileIdWindows\", json.data.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": {\n    \"type\": \"implementation\",\n    \"attributes\": {\n        \"os\": \"windows\",\n        \"arch\": \"amd64\",\n        \"filename\": \"terraform-provider-random_2.0.0_windows_amd64.zip\",\n        \"downloadUrl\": \"https://releases.hashicorp.com/terraform-provider-random/2.0.0/terraform-provider-random_2.0.0_windows_amd64.zip\",\n        \"shasumsUrl\": \"https://releases.hashicorp.com/terraform-provider-random/2.0.0/terraform-provider-random_2.0.0_SHA256SUMS\",\n        \"shasumsSignatureUrl\": \"https://releases.hashicorp.com/terraform-provider-random/2.0.0/terraform-provider-random_2.0.0_SHA256SUMS.72D7468F.sig\",\n        \"shasum\": \"a8b6caeaf29e54e3fb0653a448db350c5992281de46b573e89ff5e54531cd7a3\",\n        \"keyId\": \"34365D9472D7468F\",\n        \"asciiArmor\": \"-----BEGIN PGP PUBLIC KEY BLOCK-----\\n\\n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\\nZF5q4h4I33PSGDdSvGXn9UMY5Isjpg==\\n=7pIB\\n-----END PGP PUBLIC KEY BLOCK-----\",\n            \"trustSignature\": \"\",\n            \"source\": \"HashiCorp\",\n            \"sourceUrl\": \"https://www.hashicorp.com/security.html\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{server}}/api/v1/organization/{{organizationId}}/provider/{{providerId}}/version/{{versionId}}/implementation",
											"host": [
												"{{server}}"
											],
											"path": [
												"api",
												"v1",
												"organization",
												"{{organizationId}}",
												"provider",
												"{{providerId}}",
												"version",
												"{{versionId}}",
												"implementation"
											]
										}
									},
									"response": []
								},
								{
									"name": "create file linux",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var json = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"fileIdLinux\", json.data.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": {\n    \"type\": \"implementation\",\n    \"attributes\": {\n        \"os\": \"linux\",\n        \"arch\": \"amd64\",\n        \"filename\": \"terraform-provider-random_2.0.0_linux_amd64.zip\",\n        \"downloadUrl\": \"https://releases.hashicorp.com/terraform-provider-random/2.0.0/terraform-provider-random_2.0.0_linux_amd64.zip\",\n        \"shasumsUrl\": \"https://releases.hashicorp.com/terraform-provider-random/2.0.0/terraform-provider-random_2.0.0_SHA256SUMS\",\n        \"shasumsSignatureUrl\": \"https://releases.hashicorp.com/terraform-provider-random/2.0.0/terraform-provider-random_2.0.0_SHA256SUMS.72D7468F.sig\",\n        \"shasum\": \"5f9c7aa76b7c34d722fc9123208e26b22d60440cb47150dd04733b9b94f4541a\",\n        \"keyId\": \"34365D9472D7468F\",\n        \"asciiArmor\": \"-----BEGIN PGP PUBLIC KEY BLOCK-----\\n\\n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\\nZF5q4h4I33PSGDdSvGXn9UMY5Isjpg==\\n=7pIB\\n-----END PGP PUBLIC KEY BLOCK-----\",\n            \"trustSignature\": \"\",\n            \"source\": \"HashiCorp\",\n            \"sourceUrl\": \"https://www.hashicorp.com/security.html\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{server}}/api/v1/organization/{{organizationId}}/provider/{{providerId}}/version/{{versionId}}/implementation",
											"host": [
												"{{server}}"
											],
											"path": [
												"api",
												"v1",
												"organization",
												"{{organizationId}}",
												"provider",
												"{{providerId}}",
												"version",
												"{{versionId}}",
												"implementation"
											]
										}
									},
									"response": []
								},
								{
									"name": "search file",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{server}}/api/v1/organization/{{organizationId}}/provider/{{providerId}}/version/{{versionId}}/implementation",
											"host": [
												"{{server}}"
											],
											"path": [
												"api",
												"v1",
												"organization",
												"{{organizationId}}",
												"provider",
												"{{providerId}}",
												"version",
												"{{versionId}}",
												"implementation"
											]
										}
									},
									"response": []
								},
								{
									"name": "search implementation by os,arc,version",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var json = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"implementationId\", json.data.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/vnd.api+json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{server}}/api/v1/organization/{{organizationId}}/provider/{{providerId}}/version/{{versionId}}/implementation?filter[implementation]=os==linux;arch==amd64",
											"host": [
												"{{server}}"
											],
											"path": [
												"api",
												"v1",
												"organization",
												"{{organizationId}}",
												"provider",
												"{{providerId}}",
												"version",
												"{{versionId}}",
												"implementation"
											],
											"query": [
												{
													"key": "filter[implementation]",
													"value": "os==linux;arch==amd64"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "create version",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var json = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"versionId\", json.data.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"version\",\n    \"attributes\": {\n        \"versionNumber\": \"2.0.0\",\n        \"protocols\": \"5.0\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server}}/api/v1/organization/{{organizationId}}/provider/{{providerId}}/version",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"organization",
										"{{organizationId}}",
										"provider",
										"{{providerId}}",
										"version"
									]
								}
							},
							"response": []
						},
						{
							"name": "search version",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{server}}/api/v1/organization/{{organizationId}}/provider/{{providerId}}/version",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"organization",
										"{{organizationId}}",
										"provider",
										"{{providerId}}",
										"version"
									]
								}
							},
							"response": []
						},
						{
							"name": "search version version",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"provider\",\n    \"id\": \"1.0.0\",\n    \"attributes\": {\n      \"protocols\": \"4.0,5.0\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server}}/api/v1/organization/{{organizationId}}/provider/{{providerId}}/version?filter[version]=versionNumber==1&include=file",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"organization",
										"{{organizationId}}",
										"provider",
										"{{providerId}}",
										"version"
									],
									"query": [
										{
											"key": "filter[version]",
											"value": "versionNumber==1"
										},
										{
											"key": "include",
											"value": "file"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "search version all versions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"provider\",\n    \"id\": \"1.0.0\",\n    \"attributes\": {\n      \"protocols\": \"4.0,5.0\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server}}/api/v1/organization/{{organizationId}}/provider/{{providerId}}/version?include=file",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"organization",
										"{{organizationId}}",
										"provider",
										"{{providerId}}",
										"version"
									],
									"query": [
										{
											"key": "include",
											"value": "file"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "create provider",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var json = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"providerId\", json.data.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"type\": \"provider\",\n    \"attributes\": {\n      \"name\": \"random\",\n      \"description\": \"Provider description\"\n    }\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/api/v1/organization/{{organizationId}}/provider",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"v1",
								"organization",
								"{{organizationId}}",
								"provider"
							]
						}
					},
					"response": []
				},
				{
					"name": "search provider",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"type\": \"provider\",\n    \"attributes\": {\n      \"name\": \"aespanaProvider\",\n      \"description\": \"aespana provider description\"\n    }\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/api/v1/organization/{{organizationId}}/provider/{{providerId}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"v1",
								"organization",
								"{{organizationId}}",
								"provider",
								"{{providerId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "module",
			"item": [
				{
					"name": "create module",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var json = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"moduleId\", json.data.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"data\": {\r\n    \"type\": \"module\",\r\n    \"attributes\": {\r\n      \"name\": \"azure\",\r\n      \"description\": \"aespana sample module\",\r\n      \"provider\": \"azurerm\",\r\n      \"source\": \"https://github.com/AzBuilder/terraform-sample-repository.git\",\r\n      \"sourceSample\": \"https://github.com/AzBuilder/terraform-sample-repository.git\"\r\n    }\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/api/v1/organization/{{organizationId}}/module",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"v1",
								"organization",
								"{{organizationId}}",
								"module"
							]
						}
					},
					"response": []
				},
				{
					"name": "search modules",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{server}}/api/v1/organization/{{organizationId}}/module",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"v1",
								"organization",
								"{{organizationId}}",
								"module"
							]
						}
					},
					"response": []
				},
				{
					"name": "search module by id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{server}}/api/v1/organization/{{organizationId}}/module/{{moduleId}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"v1",
								"organization",
								"{{organizationId}}",
								"module",
								"{{moduleId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete module by id",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{server}}/api/v1/organization/{{organizationId}}/module/{{moduleId}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"v1",
								"organization",
								"{{organizationId}}",
								"module",
								"{{moduleId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "search module by name,provider and organization",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server}}/api/v1/organization/{{organizationId}}/module?filter[module]=name==azure;provider==azurerm",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"v1",
								"organization",
								"{{organizationId}}",
								"module"
							],
							"query": [
								{
									"key": "filter[module]",
									"value": "name==azure;provider==azurerm"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "workspace",
			"item": [
				{
					"name": "variable",
					"item": [
						{
							"name": "create",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var json = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"variableId\", json.data.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"data\": {\r\n    \"type\": \"variable\",\r\n    \"attributes\": {\r\n      \"key\": \"tag_name\",\r\n      \"value\": \"HolaMundo\",\r\n      \"sensitive\": false,\r\n      \"hcl\": false,\r\n      \"category\": \"terraform\",\r\n      \"description\": \"random description\"\r\n    }\r\n  }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server}}/api/v1/organization/{{organizationId}}/workspace/{{workspaceId}}/variable",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"organization",
										"{{organizationId}}",
										"workspace",
										"{{workspaceId}}",
										"variable"
									]
								}
							},
							"response": []
						},
						{
							"name": "search",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{server}}/api/v1/organization/{{organizationId}}/workspace/{{workspaceId}}/variable/",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"organization",
										"{{organizationId}}",
										"workspace",
										"{{workspaceId}}",
										"variable",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "search secrets",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{server}}/api/v1/organization/{{organizationId}}/workspace/{{workspaceId}}/variable?filter[variable]=sensitive==true;category==terraform",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"organization",
										"{{organizationId}}",
										"workspace",
										"{{workspaceId}}",
										"variable"
									],
									"query": [
										{
											"key": "filter[variable]",
											"value": "sensitive==true;category==terraform"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "search by id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{server}}/api/v1/organization/{{organizationId}}/workspace/{{workspaceId}}/variable/{{variableId}}",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"organization",
										"{{organizationId}}",
										"workspace",
										"{{workspaceId}}",
										"variable",
										"{{variableId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete by id",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{server}}/api/v1/organization/{{organizationId}}/workspace/{{workspaceId}}/variable/{{variableId}}",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"organization",
										"{{organizationId}}",
										"workspace",
										"{{workspaceId}}",
										"variable",
										"{{variableId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "create ARM_CLIENT_ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var json = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"environmentClientId\", json.data.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"data\": {\r\n    \"type\": \"variable\",\r\n    \"attributes\": {\r\n      \"key\": \"ARM_CLIENT_ID\",\r\n      \"value\": \"{{ARM_CLIENT_ID}}\",\r\n      \"sensitive\": true,\r\n      \"hcl\": false,\r\n      \"category\": \"env\",\r\n      \"description\": \"random description\"\r\n    }\r\n  }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server}}/api/v1/organization/{{organizationId}}/workspace/{{workspaceId}}/variable",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"organization",
										"{{organizationId}}",
										"workspace",
										"{{workspaceId}}",
										"variable"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete ARM_CLIENT_ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{server}}/api/v1/organization/{{organizationId}}/workspace/{{workspaceId}}/environment/{{environmentClientId}}",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"organization",
										"{{organizationId}}",
										"workspace",
										"{{workspaceId}}",
										"environment",
										"{{environmentClientId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "create ARM_CLIENT_SECRET",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var json = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"environmentSecretId\", json.data.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"data\": {\r\n    \"type\": \"variable\",\r\n    \"attributes\": {\r\n      \"key\": \"ARM_CLIENT_SECRET\",\r\n      \"value\": \"{{ARM_CLIENT_SECRET}}\",\r\n      \"sensitive\": true,\r\n      \"hcl\": false,\r\n      \"category\": \"env\",\r\n      \"description\": \"random description\"\r\n    }\r\n  }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server}}/api/v1/organization/{{organizationId}}/workspace/{{workspaceId}}/variable",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"organization",
										"{{organizationId}}",
										"workspace",
										"{{workspaceId}}",
										"variable"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete ARM_CLIENT_SECRET",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{server}}/api/v1/organization/{{organizationId}}/workspace/{{workspaceId}}/environment/{{environmentSecretId}}",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"organization",
										"{{organizationId}}",
										"workspace",
										"{{workspaceId}}",
										"environment",
										"{{environmentSecretId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "create ARM_SUBSCRIPTION_ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var json = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"environmentSubscriptionId\", json.data.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"data\": {\r\n    \"type\": \"variable\",\r\n    \"attributes\": {\r\n      \"key\": \"ARM_SUBSCRIPTION_ID\",\r\n      \"value\": \"{{ARM_SUBSCRIPTION_ID}}\",\r\n      \"sensitive\": true,\r\n      \"hcl\": false,\r\n      \"category\": \"env\",\r\n      \"description\": \"random description\"\r\n    }\r\n  }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server}}/api/v1/organization/{{organizationId}}/workspace/{{workspaceId}}/variable",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"organization",
										"{{organizationId}}",
										"workspace",
										"{{workspaceId}}",
										"variable"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete ARM_SUBSCRIPTION_ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"data\": {\r\n    \"type\": \"environment\",\r\n    \"attributes\": {\r\n      \"key\": \"ARM_SUBSCRIPTION_ID\",\r\n      \"value\": \"{{ARM_SUBSCRIPTION_ID}}\"\r\n    }\r\n  }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server}}/api/v1/organization/{{organizationId}}/workspace/{{workspaceId}}/environment/{{environmentSubscriptionId}}",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"organization",
										"{{organizationId}}",
										"workspace",
										"{{workspaceId}}",
										"environment",
										"{{environmentSubscriptionId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "create ARM_TENANT_ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var json = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"environmentTenantId\", json.data.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"data\": {\r\n    \"type\": \"variable\",\r\n    \"attributes\": {\r\n      \"key\": \"ARM_TENANT_ID\",\r\n      \"value\": \"{{ARM_TENANT_ID}}\",\r\n      \"sensitive\": true,\r\n      \"hcl\": false,\r\n      \"category\": \"env\",\r\n      \"description\": \"random description\"\r\n    }\r\n  }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server}}/api/v1/organization/{{organizationId}}/workspace/{{workspaceId}}/variable",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"organization",
										"{{organizationId}}",
										"workspace",
										"{{workspaceId}}",
										"variable"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete ARM_TENANT_ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"data\": {\r\n    \"type\": \"environment\",\r\n    \"attributes\": {\r\n      \"key\": \"ARM_TENANT_ID\",\r\n      \"value\": \"{{ARM_TENANT_ID}}\"\r\n    }\r\n  }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server}}/api/v1/organization/{{organizationId}}/workspace/{{workspaceId}}/environment/{{environmentTenantId}}",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"v1",
										"organization",
										"{{organizationId}}",
										"workspace",
										"{{workspaceId}}",
										"environment",
										"{{environmentTenantId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var json = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"workspaceId\", json.data.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"data\": {\r\n    \"type\": \"workspace\",\r\n    \"attributes\": {\r\n      \"name\": \"workspace\",\r\n      \"source\": \"https://github.com/AzBuilder/terraform-sample-repository.git\",\r\n      \"branch\": \"main\",\r\n      \"terraformVersion\": \"0.15.0\"\r\n    }\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/api/v1/organization/{{organizationId}}/workspace",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"v1",
								"organization",
								"{{organizationId}}",
								"workspace"
							]
						}
					},
					"response": []
				},
				{
					"name": "search",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{server}}/api/v1/organization/{{organizationId}}/workspace",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"v1",
								"organization",
								"{{organizationId}}",
								"workspace"
							]
						}
					},
					"response": []
				},
				{
					"name": "search by id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{server}}/api/v1/organization/{{organizationId}}/workspace/{{workspaceId}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"v1",
								"organization",
								"{{organizationId}}",
								"workspace",
								"{{workspaceId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "search by id with definition",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{server}}/api/v1/organization/{{organizationId}}/workspace/{{workspaceId}}?include=definition",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"v1",
								"organization",
								"{{organizationId}}",
								"workspace",
								"{{workspaceId}}"
							],
							"query": [
								{
									"key": "include",
									"value": "definition"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search by id with variables",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{server}}/api/v1/organization/{{organizationId}}/workspace/{{workspaceId}}?include=variable",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"v1",
								"organization",
								"{{organizationId}}",
								"workspace",
								"{{workspaceId}}"
							],
							"query": [
								{
									"key": "include",
									"value": "variable"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search by id with env",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{server}}/api/v1/organization/{{organizationId}}/workspace/{{workspaceId}}?include=environment",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"v1",
								"organization",
								"{{organizationId}}",
								"workspace",
								"{{workspaceId}}"
							],
							"query": [
								{
									"key": "include",
									"value": "environment"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search by id with secrets",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{server}}/api/v1/organization/{{organizationId}}/workspace/{{workspaceId}}?include=secret",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"v1",
								"organization",
								"{{organizationId}}",
								"workspace",
								"{{workspaceId}}"
							],
							"query": [
								{
									"key": "include",
									"value": "secret"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete by id",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{server}}/api/v1/organization/{{organizationId}}/workspace/{{workspaceId}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"v1",
								"organization",
								"{{organizationId}}",
								"workspace",
								"{{workspaceId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Job",
			"item": [
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var json = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"jobId\", json.data.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"data\": {\r\n    \"type\": \"job\",\r\n    \"attributes\": {\r\n      \"command\": \"plan\"\r\n    },\r\n    \"relationships\":{\r\n        \"workspace\":{\r\n            \"data\":{\r\n                \"type\": \"workspace\",\r\n                \"id\": \"{{workspaceId}}\"\r\n            }\r\n        }\r\n    }\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/api/v1/organization/{{organizationId}}/job",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"v1",
								"organization",
								"{{organizationId}}",
								"job"
							]
						}
					},
					"response": []
				},
				{
					"name": "update status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"data\": {\r\n    \"type\": \"job\",\r\n    \"id\": \"{{jobId}}\",\r\n    \"attributes\": {\r\n      \"command\": \"plan\",\r\n      \"status\": \"pending\"\r\n    }\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/api/v1/organization/{{organizationId}}/job/{{jobId}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"v1",
								"organization",
								"{{organizationId}}",
								"job",
								"{{jobId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "search",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{server}}/api/v1/organization/{{organizationId}}/job",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"v1",
								"organization",
								"{{organizationId}}",
								"job"
							]
						}
					},
					"response": []
				},
				{
					"name": "search by id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{server}}/api/v1/organization/{{organizationId}}/job/{{jobId}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"v1",
								"organization",
								"{{organizationId}}",
								"job",
								"{{jobId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete by id",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{server}}/api/v1/organization/{{organizationId}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"v1",
								"organization",
								"{{organizationId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "swagger",
			"item": [
				{
					"name": "graphql",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\r\n  __schema {\r\n    queryType {\r\n      name\r\n    }\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{server}}/graphql/api/v1",
							"host": [
								"{{server}}"
							],
							"path": [
								"graphql",
								"api",
								"v1"
							]
						}
					},
					"response": []
				},
				{
					"name": "doc",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{device_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"data\": {\r\n    \"type\": \"organization\",\r\n    \"attributes\": {\r\n      \"name\": \"Sample Organization Name\",\r\n      \"description\": \"Sample Organization Description\"\r\n    }\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://poc.aks.vse.aespana.me/azbuilder/doc",
							"protocol": "https",
							"host": [
								"poc",
								"aks",
								"vse",
								"aespana",
								"me"
							],
							"path": [
								"azbuilder",
								"doc"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{device_access_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}