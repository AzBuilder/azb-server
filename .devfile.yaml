schemaVersion: 2.1.0
metadata:
  name: terrakube-platform
components:
  - name: maven
    container:
      image: docker.io/maven:3.9.0-eclipse-temurin-17
      memoryLimit: 4Gi
      endpoints:
        - exposure: public
          name: 8000-api
          protocol: http
          targetPort: 8000
      volumeMounts:
        - name: m2
          path: /home/user/.m2
      command: [ 'tail' ]
      args: [ '-f', '/dev/null' ]

  - name: node
    container:
      image: docker.io/node:lts-bullseye-slim
      memoryLimit: 3Gi
      volumeMounts:
        - name: config
          path: /home/user/.terrakubeConfig
      command: [ 'tail' ]
      args: [ '-f', '/dev/null' ]

  - name: minio
    container:
      image: docker.io/bitnami/minio:2022
      memoryLimit: 1Gi
      endpoints:
        - exposure: public
          name: minio9000
          protocol: http
          targetPort: 9000
        - exposure: public
          name: minio9001
          protocol: http
          targetPort: 9001
      command: ['tail']
      args: ['-f', '/dev/null']

  - name: m2
    volume:
      size: 1G

commands:
  - id: maven-build
    exec:
      component: maven
      workingDir: ${PROJECT_SOURCE}
      commandLine: |
        mvn clean install -Dspring-boot.build-image.skip=true -Dmaven.test.skip=true
      group:
        kind: build
        isDefault: false

  - id: yarn-build
    exec:
      component: node
      workingDir: ${PROJECT_SOURCE}/ui
      commandLine: |
        yarn install && yarn build 
      group:
        kind: build
        isDefault: false

  - id: yarn-start
    exec:
      component: node
      workingDir: ${PROJECT_SOURCE}/ui
      commandLine: |
        yarn start
      group:
        kind: build
        isDefault: false

  - id: run-api
    exec:
      component: maven
      workingDir: ${PROJECT_SOURCE}/api
      mountSources: true
      commandLine: |
        chmod +x /projects/terrakube/scripts/run.sh && ./projects/terrakube/scripts/run.sh

      group:
        kind: build
        isDefault: false

  - id: run-registry
    exec:
      component: maven
      workingDir: ${PROJECT_SOURCE}/registry
      mountSources: true
      commandLine: |
        mvn spring-boot:run -Dspring-boot.run.profiles=demo -Dserver.port=8000

      group:
        kind: build
        isDefault: false
  
  - id: run-exector
    exec:
      component: maven
      workingDir: ${PROJECT_SOURCE}/executor
      mountSources: true
      commandLine: |
        mvn spring-boot:run -Dspring-boot.run.profiles=demo -Dserver.port=8000

      group:
        kind: build
        isDefault: false

  - id: minio-start
    exec:
      component: minio
      workingDir: ${PROJECT_SOURCE}
      commandLine: minio server /data --console-address "0.0.0.0:9001"
      group:
        kind: build
        isDefault: false
