swagger: '2.0'
info:
  version: ''
  title: Elide Service
basePath: /api/v1
tags:
  - name: version
  - name: environment
  - name: job
  - name: organization
  - name: module
  - name: provider
  - name: secret
  - name: variable
  - name: workspace
  - name: implementation
paths:
  /workspace/{workspaceId}/secret:
    get:
      tags:
        - secret
      description: Returns the relationship secret
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - key
              - '-key'
              - value
              - '-value'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[secret]
          in: query
          description: Selects the set of secret fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - key
              - value
              - workspace
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - workspace
          collectionFormat: csv
        - name: filter[secret]
          in: query
          description: Filters the collection of secret using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/secret'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - secret
      description: Creates an item of type secret and adds it to secret
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: secret
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/secret'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/secret'
    parameters:
      - name: workspaceId
        in: path
        description: workspace Identifier
        required: true
        type: string
  /workspace/{workspaceId}/secret/{secretId}:
    get:
      tags:
        - secret
      description: Returns an instance of type secret
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[secret]
          in: query
          description: Selects the set of secret fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - key
              - value
              - workspace
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - workspace
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/secret'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - secret
      description: Deletes an instance of type secret
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - secret
      description: Modifies an instance of type secret
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: secret
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/secret'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: workspaceId
        in: path
        description: workspace Identifier
        required: true
        type: string
      - name: secretId
        in: path
        description: secret Identifier
        required: true
        type: string
  /workspace/{workspaceId}/relationships/secret:
    get:
      tags:
        - secret
      description: Returns the relationship identifiers for secret
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[secret]
          in: query
          description: Filters the collection of secret using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - secret
    post:
      tags:
        - secret
      description: Adds items to the relationship secret
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - secret
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - secret
    delete:
      tags:
        - secret
      description: Deletes items from the relationship secret
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - secret
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - secret
      description: Replaces the relationship secret
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - secret
      responses:
        '204':
          description: Successful response
    parameters:
      - name: workspaceId
        in: path
        description: workspace Identifier
        required: true
        type: string
  /workspace/{workspaceId}/variable:
    get:
      tags:
        - variable
      description: Returns the relationship variable
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - key
              - '-key'
              - value
              - '-value'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[variable]
          in: query
          description: Selects the set of variable fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - key
              - value
              - workspace
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - workspace
          collectionFormat: csv
        - name: filter[variable]
          in: query
          description: Filters the collection of variable using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/variable'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - variable
      description: Creates an item of type variable and adds it to variable
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: variable
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/variable'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/variable'
    parameters:
      - name: workspaceId
        in: path
        description: workspace Identifier
        required: true
        type: string
  /workspace/{workspaceId}/variable/{variableId}:
    get:
      tags:
        - variable
      description: Returns an instance of type variable
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[variable]
          in: query
          description: Selects the set of variable fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - key
              - value
              - workspace
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - workspace
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/variable'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - variable
      description: Deletes an instance of type variable
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - variable
      description: Modifies an instance of type variable
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: variable
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/variable'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: workspaceId
        in: path
        description: workspace Identifier
        required: true
        type: string
      - name: variableId
        in: path
        description: variable Identifier
        required: true
        type: string
  /workspace/{workspaceId}/relationships/variable:
    get:
      tags:
        - variable
      description: Returns the relationship identifiers for variable
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[variable]
          in: query
          description: Filters the collection of variable using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - variable
    post:
      tags:
        - variable
      description: Adds items to the relationship variable
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - variable
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - variable
    delete:
      tags:
        - variable
      description: Deletes items from the relationship variable
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - variable
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - variable
      description: Replaces the relationship variable
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - variable
      responses:
        '204':
          description: Successful response
    parameters:
      - name: workspaceId
        in: path
        description: workspace Identifier
        required: true
        type: string
  /organization/{organizationId}/module:
    get:
      tags:
        - module
      description: Returns the relationship module
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - description
              - '-description'
              - name
              - '-name'
              - provider
              - '-provider'
              - registryPath
              - '-registryPath'
              - source
              - '-source'
              - sourceSample
              - '-sourceSample'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[module]
          in: query
          description: Selects the set of module fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - description
              - name
              - provider
              - registryPath
              - source
              - sourceSample
              - versions
              - organization
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - organization
          collectionFormat: csv
        - name: filter[module]
          in: query
          description: Filters the collection of module using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/module'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - module
      description: Creates an item of type module and adds it to module
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: module
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/module'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/module'
    parameters:
      - name: organizationId
        in: path
        description: organization Identifier
        required: true
        type: string
  /organization/{organizationId}/module/{moduleId}:
    get:
      tags:
        - module
      description: Returns an instance of type module
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[module]
          in: query
          description: Selects the set of module fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - description
              - name
              - provider
              - registryPath
              - source
              - sourceSample
              - versions
              - organization
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - organization
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/module'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - module
      description: Deletes an instance of type module
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - module
      description: Modifies an instance of type module
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: module
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/module'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: organizationId
        in: path
        description: organization Identifier
        required: true
        type: string
      - name: moduleId
        in: path
        description: module Identifier
        required: true
        type: string
  /organization/{organizationId}/relationships/module:
    get:
      tags:
        - module
      description: Returns the relationship identifiers for module
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[module]
          in: query
          description: Filters the collection of module using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - module
    post:
      tags:
        - module
      description: Adds items to the relationship module
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - module
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - module
    delete:
      tags:
        - module
      description: Deletes items from the relationship module
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - module
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - module
      description: Replaces the relationship module
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - module
      responses:
        '204':
          description: Successful response
    parameters:
      - name: organizationId
        in: path
        description: organization Identifier
        required: true
        type: string
  /organization/{organizationId}/job:
    get:
      tags:
        - job
      description: Returns the relationship job
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - output
              - '-output'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[job]
          in: query
          description: Selects the set of job fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - command
              - output
              - status
              - organization
              - workspace
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - organization
              - workspace
          collectionFormat: csv
        - name: filter[job]
          in: query
          description: Filters the collection of job using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/job'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - job
      description: Creates an item of type job and adds it to job
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: job
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/job'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/job'
    parameters:
      - name: organizationId
        in: path
        description: organization Identifier
        required: true
        type: string
  /organization/{organizationId}/job/{jobId}:
    get:
      tags:
        - job
      description: Returns an instance of type job
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[job]
          in: query
          description: Selects the set of job fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - command
              - output
              - status
              - organization
              - workspace
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - organization
              - workspace
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/job'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - job
      description: Deletes an instance of type job
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - job
      description: Modifies an instance of type job
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: job
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/job'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: organizationId
        in: path
        description: organization Identifier
        required: true
        type: string
      - name: jobId
        in: path
        description: job Identifier
        required: true
        type: string
  /organization/{organizationId}/relationships/job:
    get:
      tags:
        - job
      description: Returns the relationship identifiers for job
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[job]
          in: query
          description: Filters the collection of job using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - job
    post:
      tags:
        - job
      description: Adds items to the relationship job
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - job
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - job
    delete:
      tags:
        - job
      description: Deletes items from the relationship job
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - job
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - job
      description: Replaces the relationship job
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - job
      responses:
        '204':
          description: Successful response
    parameters:
      - name: organizationId
        in: path
        description: organization Identifier
        required: true
        type: string
  /workspace/{workspaceId}/organization:
    get:
      tags:
        - organization
      description: Returns the relationship organization
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - description
              - '-description'
              - name
              - '-name'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[organization]
          in: query
          description: Selects the set of organization fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - description
              - name
              - job
              - module
              - provider
              - workspace
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - job
              - module
              - provider
              - workspace
          collectionFormat: csv
        - name: filter[organization]
          in: query
          description: Filters the collection of organization using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/organization'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - organization
      description: Creates an item of type organization and adds it to organization
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: organization
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/organization'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/organization'
    parameters:
      - name: workspaceId
        in: path
        description: workspace Identifier
        required: true
        type: string
  /workspace/{workspaceId}/organization/{organizationId}:
    get:
      tags:
        - organization
      description: Returns an instance of type organization
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[organization]
          in: query
          description: Selects the set of organization fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - description
              - name
              - job
              - module
              - provider
              - workspace
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - job
              - module
              - provider
              - workspace
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/organization'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - organization
      description: Deletes an instance of type organization
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - organization
      description: Modifies an instance of type organization
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: organization
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/organization'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: workspaceId
        in: path
        description: workspace Identifier
        required: true
        type: string
      - name: organizationId
        in: path
        description: organization Identifier
        required: true
        type: string
  /workspace/{workspaceId}/relationships/organization:
    get:
      tags:
        - organization
      description: Returns the relationship identifiers for organization
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[organization]
          in: query
          description: Filters the collection of organization using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - organization
    patch:
      tags:
        - organization
      description: Replaces the relationship organization
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - organization
      responses:
        '204':
          description: Successful response
    parameters:
      - name: workspaceId
        in: path
        description: workspace Identifier
        required: true
        type: string
  /workspace/{workspaceId}/job:
    get:
      tags:
        - job
      description: Returns the relationship job
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - output
              - '-output'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[job]
          in: query
          description: Selects the set of job fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - command
              - output
              - status
              - organization
              - workspace
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - organization
              - workspace
          collectionFormat: csv
        - name: filter[job]
          in: query
          description: Filters the collection of job using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/job'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - job
      description: Creates an item of type job and adds it to job
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: job
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/job'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/job'
    parameters:
      - name: workspaceId
        in: path
        description: workspace Identifier
        required: true
        type: string
  /workspace/{workspaceId}/job/{jobId}:
    get:
      tags:
        - job
      description: Returns an instance of type job
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[job]
          in: query
          description: Selects the set of job fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - command
              - output
              - status
              - organization
              - workspace
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - organization
              - workspace
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/job'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - job
      description: Deletes an instance of type job
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - job
      description: Modifies an instance of type job
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: job
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/job'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: workspaceId
        in: path
        description: workspace Identifier
        required: true
        type: string
      - name: jobId
        in: path
        description: job Identifier
        required: true
        type: string
  /workspace/{workspaceId}/relationships/job:
    get:
      tags:
        - job
      description: Returns the relationship identifiers for job
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[job]
          in: query
          description: Filters the collection of job using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - job
    post:
      tags:
        - job
      description: Adds items to the relationship job
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - job
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - job
    delete:
      tags:
        - job
      description: Deletes items from the relationship job
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - job
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - job
      description: Replaces the relationship job
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - job
      responses:
        '204':
          description: Successful response
    parameters:
      - name: workspaceId
        in: path
        description: workspace Identifier
        required: true
        type: string
  /implementation:
    get:
      tags:
        - implementation
      description: Returns the collection of type implementation
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - arch
              - '-arch'
              - asciiArmor
              - '-asciiArmor'
              - downloadUrl
              - '-downloadUrl'
              - filename
              - '-filename'
              - keyId
              - '-keyId'
              - os
              - '-os'
              - shasum
              - '-shasum'
              - shasumsSignatureUrl
              - '-shasumsSignatureUrl'
              - shasumsUrl
              - '-shasumsUrl'
              - source
              - '-source'
              - sourceUrl
              - '-sourceUrl'
              - trustSignature
              - '-trustSignature'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[implementation]
          in: query
          description: Selects the set of implementation fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - arch
              - asciiArmor
              - downloadUrl
              - filename
              - keyId
              - os
              - shasum
              - shasumsSignatureUrl
              - shasumsUrl
              - source
              - sourceUrl
              - trustSignature
              - version
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - version
          collectionFormat: csv
        - name: filter[implementation]
          in: query
          description: Filters the collection of implementation using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of implementation using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/implementation'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - implementation
      description: Creates an item of type implementation
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: implementation
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/implementation'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/implementation'
  /implementation/{implementationId}:
    get:
      tags:
        - implementation
      description: Returns an instance of type implementation
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[implementation]
          in: query
          description: Selects the set of implementation fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - arch
              - asciiArmor
              - downloadUrl
              - filename
              - keyId
              - os
              - shasum
              - shasumsSignatureUrl
              - shasumsUrl
              - source
              - sourceUrl
              - trustSignature
              - version
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - version
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/implementation'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - implementation
      description: Deletes an instance of type implementation
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - implementation
      description: Modifies an instance of type implementation
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: implementation
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/implementation'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: implementationId
        in: path
        description: implementation Identifier
        required: true
        type: string
  /implementation/{implementationId}/version:
    get:
      tags:
        - version
      description: Returns the relationship version
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - protocols
              - '-protocols'
              - versionNumber
              - '-versionNumber'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[version]
          in: query
          description: Selects the set of version fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - protocols
              - versionNumber
              - implementation
              - provider
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - implementation
              - provider
          collectionFormat: csv
        - name: filter[version]
          in: query
          description: Filters the collection of version using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/version'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - version
      description: Creates an item of type version and adds it to version
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: version
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/version'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/version'
    parameters:
      - name: implementationId
        in: path
        description: implementation Identifier
        required: true
        type: string
  /implementation/{implementationId}/version/{versionId}:
    get:
      tags:
        - version
      description: Returns an instance of type version
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[version]
          in: query
          description: Selects the set of version fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - protocols
              - versionNumber
              - implementation
              - provider
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - implementation
              - provider
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/version'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - version
      description: Deletes an instance of type version
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - version
      description: Modifies an instance of type version
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: version
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/version'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: implementationId
        in: path
        description: implementation Identifier
        required: true
        type: string
      - name: versionId
        in: path
        description: version Identifier
        required: true
        type: string
  /implementation/{implementationId}/relationships/version:
    get:
      tags:
        - version
      description: Returns the relationship identifiers for version
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[version]
          in: query
          description: Filters the collection of version using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - version
    patch:
      tags:
        - version
      description: Replaces the relationship version
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                      - version
      responses:
        '204':
          description: Successful response
    parameters:
      - name: implementationId
        in: path
        description: implementation Identifier
        required: true
        type: string
  /organization/{organizationId}/provider:
    get:
      tags:
        - provider
      description: Returns the relationship provider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - description
              - '-description'
              - name
              - '-name'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[provider]
          in: query
          description: Selects the set of provider fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - description
              - name
              - organization
              - version
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - organization
              - version
          collectionFormat: csv
        - name: filter[provider]
          in: query
          description: Filters the collection of provider using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/provider'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - provider
      description: Creates an item of type provider and adds it to provider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: provider
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/provider'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/provider'
    parameters:
      - name: organizationId
        in: path
        description: organization Identifier
        required: true
        type: string
  /organization/{organizationId}/provider/{providerId}:
    get:
      tags:
        - provider
      description: Returns an instance of type provider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[provider]
          in: query
          description: Selects the set of provider fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - description
              - name
              - organization
              - version
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - organization
              - version
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/provider'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - provider
      description: Deletes an instance of type provider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - provider
      description: Modifies an instance of type provider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: provider
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/provider'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: organizationId
        in: path
        description: organization Identifier
        required: true
        type: string
      - name: providerId
        in: path
        description: provider Identifier
        required: true
        type: string
  /organization/{organizationId}/relationships/provider:
    get:
      tags:
        - provider
      description: Returns the relationship identifiers for provider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[provider]
          in: query
          description: Filters the collection of provider using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - provider
    post:
      tags:
        - provider
      description: Adds items to the relationship provider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - provider
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - provider
    delete:
      tags:
        - provider
      description: Deletes items from the relationship provider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - provider
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - provider
      description: Replaces the relationship provider
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - provider
      responses:
        '204':
          description: Successful response
    parameters:
      - name: organizationId
        in: path
        description: organization Identifier
        required: true
        type: string
  /workspace/{workspaceId}/environment:
    get:
      tags:
        - environment
      description: Returns the relationship environment
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - key
              - '-key'
              - value
              - '-value'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[environment]
          in: query
          description: Selects the set of environment fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - key
              - value
              - workspace
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - workspace
          collectionFormat: csv
        - name: filter[environment]
          in: query
          description: Filters the collection of environment using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/environment'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - environment
      description: Creates an item of type environment and adds it to environment
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: environment
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/environment'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/environment'
    parameters:
      - name: workspaceId
        in: path
        description: workspace Identifier
        required: true
        type: string
  /workspace/{workspaceId}/environment/{environmentId}:
    get:
      tags:
        - environment
      description: Returns an instance of type environment
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[environment]
          in: query
          description: Selects the set of environment fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - key
              - value
              - workspace
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - workspace
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/environment'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - environment
      description: Deletes an instance of type environment
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - environment
      description: Modifies an instance of type environment
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: environment
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/environment'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: workspaceId
        in: path
        description: workspace Identifier
        required: true
        type: string
      - name: environmentId
        in: path
        description: environment Identifier
        required: true
        type: string
  /workspace/{workspaceId}/relationships/environment:
    get:
      tags:
        - environment
      description: Returns the relationship identifiers for environment
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[environment]
          in: query
          description: Filters the collection of environment using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - environment
    post:
      tags:
        - environment
      description: Adds items to the relationship environment
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - environment
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - environment
    delete:
      tags:
        - environment
      description: Deletes items from the relationship environment
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - environment
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - environment
      description: Replaces the relationship environment
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - environment
      responses:
        '204':
          description: Successful response
    parameters:
      - name: workspaceId
        in: path
        description: workspace Identifier
        required: true
        type: string
  /workspace:
    get:
      tags:
        - workspace
      description: Returns the collection of type workspace
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - branch
              - '-branch'
              - name
              - '-name'
              - source
              - '-source'
              - terraformVersion
              - '-terraformVersion'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[workspace]
          in: query
          description: Selects the set of workspace fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - branch
              - name
              - source
              - terraformVersion
              - environment
              - job
              - organization
              - secret
              - variable
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - environment
              - job
              - organization
              - secret
              - variable
          collectionFormat: csv
        - name: filter[workspace]
          in: query
          description: Filters the collection of workspace using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of workspace using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/workspace'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - workspace
      description: Creates an item of type workspace
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: workspace
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/workspace'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/workspace'
  /workspace/{workspaceId}:
    get:
      tags:
        - workspace
      description: Returns an instance of type workspace
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[workspace]
          in: query
          description: Selects the set of workspace fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - branch
              - name
              - source
              - terraformVersion
              - environment
              - job
              - organization
              - secret
              - variable
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - environment
              - job
              - organization
              - secret
              - variable
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/workspace'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - workspace
      description: Deletes an instance of type workspace
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - workspace
      description: Modifies an instance of type workspace
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: workspace
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/workspace'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: workspaceId
        in: path
        description: workspace Identifier
        required: true
        type: string
  /organization:
    get:
      tags:
        - organization
      description: Returns the collection of type organization
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - description
              - '-description'
              - name
              - '-name'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[organization]
          in: query
          description: Selects the set of organization fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - description
              - name
              - job
              - module
              - provider
              - workspace
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - job
              - module
              - provider
              - workspace
          collectionFormat: csv
        - name: filter[organization]
          in: query
          description: Filters the collection of organization using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: filter
          in: query
          description: Filters the collection of organization using a 'joined' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/organization'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - organization
      description: Creates an item of type organization
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: organization
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/organization'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/organization'
  /organization/{organizationId}:
    get:
      tags:
        - organization
      description: Returns an instance of type organization
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[organization]
          in: query
          description: Selects the set of organization fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - description
              - name
              - job
              - module
              - provider
              - workspace
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - job
              - module
              - provider
              - workspace
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/organization'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - organization
      description: Deletes an instance of type organization
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - organization
      description: Modifies an instance of type organization
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: organization
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/organization'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: organizationId
        in: path
        description: organization Identifier
        required: true
        type: string
  /organization/{organizationId}/workspace:
    get:
      tags:
        - workspace
      description: Returns the relationship workspace
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: sort
          in: query
          description: Sorts the collection on the selected attributes.  A prefix of '-' sorts descending
          required: false
          type: array
          items:
            type: string
            enum:
              - branch
              - '-branch'
              - name
              - '-name'
              - source
              - '-source'
              - terraformVersion
              - '-terraformVersion'
              - id
              - '-id'
          collectionFormat: csv
        - name: fields[workspace]
          in: query
          description: Selects the set of workspace fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - branch
              - name
              - source
              - terraformVersion
              - environment
              - job
              - organization
              - secret
              - variable
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - environment
              - job
              - organization
              - secret
              - variable
          collectionFormat: csv
        - name: filter[workspace]
          in: query
          description: Filters the collection of workspace using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/workspace'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    post:
      tags:
        - workspace
      description: Creates an item of type workspace and adds it to workspace
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: workspace
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/workspace'
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/workspace'
    parameters:
      - name: organizationId
        in: path
        description: organization Identifier
        required: true
        type: string
  /organization/{organizationId}/workspace/{workspaceId}:
    get:
      tags:
        - workspace
      description: Returns an instance of type workspace
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: fields[workspace]
          in: query
          description: Selects the set of workspace fields that should be returned in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - branch
              - name
              - source
              - terraformVersion
              - environment
              - job
              - organization
              - secret
              - variable
          collectionFormat: csv
        - name: include
          in: query
          description: Selects the set of relationships that should be expanded as a compound document in the result.
          required: false
          type: array
          items:
            type: string
            enum:
              - environment
              - job
              - organization
              - secret
              - variable
          collectionFormat: csv
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/workspace'
              included:
                type: array
                description: Included resources
                uniqueItems: true
                items:
                  type: object
                  properties:
                    attributes:
                      type: object
                    id:
                      type: string
                    relationships:
                      type: object
                    type:
                      type: string
    delete:
      tags:
        - workspace
      description: Deletes an instance of type workspace
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters: []
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - workspace
      description: Modifies an instance of type workspace
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: workspace
          required: false
          schema:
            properties:
              data:
                $ref: '#/definitions/workspace'
      responses:
        '204':
          description: Successful response
    parameters:
      - name: organizationId
        in: path
        description: organization Identifier
        required: true
        type: string
      - name: workspaceId
        in: path
        description: workspace Identifier
        required: true
        type: string
  /organization/{organizationId}/relationships/workspace:
    get:
      tags:
        - workspace
      description: Returns the relationship identifiers for workspace
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: filter[workspace]
          in: query
          description: Filters the collection of workspace using a 'disjoint' RSQL expression
          required: false
          type: string
        - name: page[number]
          in: query
          description: Number of pages to return.  Can be used with page[size]
          required: false
          type: integer
        - name: page[size]
          in: query
          description: Number of elements per page.  Can be used with page[number]
          required: false
          type: integer
        - name: page[offset]
          in: query
          description: Offset from 0 to start paginating.  Can be used with page[limit]
          required: false
          type: integer
        - name: page[limit]
          in: query
          description: Maximum number of items to return.  Can be used with page[offset]
          required: false
          type: integer
        - name: page[totals]
          in: query
          description: For requesting total pages/records be included in the response page meta data
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - workspace
    post:
      tags:
        - workspace
      description: Adds items to the relationship workspace
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - workspace
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - workspace
    delete:
      tags:
        - workspace
      description: Deletes items from the relationship workspace
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - workspace
      responses:
        '204':
          description: Successful response
    patch:
      tags:
        - workspace
      description: Replaces the relationship workspace
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - in: body
          name: relationship
          required: false
          schema:
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - workspace
      responses:
        '204':
          description: Successful response
    parameters:
      - name: organizationId
        in: path
        description: organization Identifier
        required: true
        type: string
definitions:
  environment:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          key:
            type: string
          value:
            type: string
      relationships:
        type: object
        properties:
          workspace:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
                enum:
                  - workspace
  workspace:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          branch:
            type: string
          name:
            type: string
          source:
            type: string
          terraformVersion:
            type: string
      relationships:
        type: object
        properties:
          environment:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
                enum:
                  - environment
          job:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
                enum:
                  - job
          organization:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
                enum:
                  - organization
          secret:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
                enum:
                  - secret
          variable:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
                enum:
                  - variable
  provider:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          description:
            type: string
          name:
            type: string
      relationships:
        type: object
        properties:
          organization:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
                enum:
                  - organization
          version:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
                enum:
                  - version
  organization:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          description:
            type: string
          name:
            type: string
      relationships:
        type: object
        properties:
          job:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
                enum:
                  - job
          module:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
                enum:
                  - module
          provider:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
                enum:
                  - provider
          workspace:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
                enum:
                  - workspace
  module:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          description:
            type: string
          name:
            type: string
          provider:
            type: string
          registryPath:
            type: string
          source:
            type: string
          sourceSample:
            type: string
          versions:
            type: array
            items:
              type: object
      relationships:
        type: object
        properties:
          organization:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
                enum:
                  - organization
  implementation:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          arch:
            type: string
          asciiArmor:
            type: string
          downloadUrl:
            type: string
          filename:
            type: string
          keyId:
            type: string
          os:
            type: string
          shasum:
            type: string
          shasumsSignatureUrl:
            type: string
          shasumsUrl:
            type: string
          source:
            type: string
          sourceUrl:
            type: string
          trustSignature:
            type: string
      relationships:
        type: object
        properties:
          version:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
                enum:
                  - version
  variable:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          key:
            type: string
          value:
            type: string
      relationships:
        type: object
        properties:
          workspace:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
                enum:
                  - workspace
  secret:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          key:
            type: string
          value:
            type: string
      relationships:
        type: object
        properties:
          workspace:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
                enum:
                  - workspace
  job:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          command:
            type: string
            enum:
              - plan
              - apply
              - destroy
          output:
            type: string
          status:
            type: string
            enum:
              - pending
              - queue
              - running
              - completed
      relationships:
        type: object
        properties:
          organization:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
                enum:
                  - organization
          workspace:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
                enum:
                  - workspace
  version:
    properties:
      type:
        type: string
        description: ''
      id:
        type: string
      attributes:
        type: object
        properties:
          protocols:
            type: string
          versionNumber:
            type: string
      relationships:
        type: object
        properties:
          implementation:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
                enum:
                  - implementation
          provider:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
                enum:
                  - provider

