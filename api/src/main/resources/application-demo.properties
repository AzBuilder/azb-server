##############
#H2/JPA SETUP#
##############
spring.jpa.open-in-view=false
#spring.h2.console.enabled=true
#spring.jpa.hibernate.show_sql=true
#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.hibernate.dialect=org.hibernate.dialect.H2Dialect
#spring.jpa.hibernate.jdbc.use_scrollable_resultset=true
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#spring.jpa.datasource.url=jdbc:h2:mem:testdb
#spring.jpa.datasource.username=sa
#spring.jpa.datasource.password=password
#spring.jpa.datasource.driver-class-name=org.h2.Driver
#spring.datasource.generate-unique-name=false

#############
#ELIDE SETUP#
#############
elide.modelPackage=org.terrakube.api.rs
elide.json-api.path=/api/v1
elide.json-api.enabled=true
elide.graphql.path=/graphql/api/v1
elide.graphql.enabled=true
elide.swagger.path=/doc
elide.swagger.enabled=true

######################
#ENABLE ELIDE FILTERS#
######################
server.tomcat.relaxed-query-chars=[,]

#################
#LIQUIBASE SETUP#
#################
spring.liquibase.enabled=true
spring.liquibase.change-log=classpath:/db/changelog/changelog-demo.xml

###############
#DATABASE TYPE#
###############
org.terrakube.api.plugin.datasource.type=${ApiDataSourceType}
org.terrakube.api.plugin.datasource.hostname=${DatasourceHostname}
org.terrakube.api.plugin.datasource.databaseName=${DatasourceDatabase}
org.terrakube.api.plugin.datasource.databaseUser=${DatasourceUser}
org.terrakube.api.plugin.datasource.databasePassword=${DatasourcePassword}

################
#OWNER INSTANCE#
################
org.terrakube.owner=${TERRAKUBE_ADMIN_GROUP:TERRAKUBE_ADMIN}

##################
#Validation Types#
##################
org.terrakube.api.groups.type=${GroupValidationType}
org.terrakube.api.users.type=${UserValidationType}
org.terrakube.api.authentication.type=${AuthenticationValidationType}

##########
#HOSTNAME#
##########
org.terrakube.hostname=${TerrakubeHostname}
# Local Example localhost:8080 without http or https.
# Public URL Example terrakube.com without http or https.

########
# Cors #
########
org.terrakube.ui.url=${TerrakubeUiURL}

##############
#QUARTZ SETUP#
##############
spring.quartz.job-store-type=jdbc
spring.quartz.jdbc.initialize-schema=never

##############
#EXECUTOR URL#
##############
org.terrakube.executor.url=${AzBuilderExecutorUrl}

#################
#Storage Service#
#################
org.terrakube.storage.type=${StorageType}

#################
# Azure Storage #
#################
org.terrakube.storage.azure.accountName=${AzureAccountName}
org.terrakube.storage.azure.accountKey=${AzureAccountKey}

###############
# AWS Storage #
###############
org.terrakube.storage.aws.accessKey=${AwsStorageAccessKey}
org.terrakube.storage.aws.secretKey=${AwsStorageSecretKey}
org.terrakube.storage.aws.bucketName=${AwsStorageBucketName}
org.terrakube.storage.aws.region=${AwsStorageRegion}
org.terrakube.storage.aws.endpoint=${AwsEndpoint}

###############
# GCP Storage #
###############
org.terrakube.storage.gcp.credentials=${GcpStorageCredentialsBase64}
org.terrakube.storage.gcp.bucketName=${GcpStorageBucketName}
org.terrakube.storage.gcp.projectId=${GcpStorageProjectId}

##########
# HEALTH #
##########
management.endpoints.web.exposure.include=health
management.endpoint.health.enabled=true
management.endpoints.enabled-by-default=false
management.endpoint.health.probes.enabled=true
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true

######################
# DEX AUTHENTICATION #
######################
org.terrakube.token.pat=${PatSecret}
org.terrakube.token.internal=${InternalSecret}
org.terrakube.token.issuer-uri=${DexIssuerUri}
#spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${DexJwtSetUri}

######################
# Terraform Releases #
######################
org.terrakube.terraform.json.releasesUrl=${CustomTerraformReleasesUrl}